{"mappings":"AAAAA,SAASC,iBAAiB,oBAAoB,WAC5C,IAAMC,EAAeF,SAASG,iBAAiB,iBACzCC,EAAeJ,SAASG,iBAAiB,qBACzCE,EAASL,SAASG,iBAAiB,UAEzCD,EAAaI,SAAQ,SAAAC,GACnBA,EAAMN,iBAAiB,SAAS,WAC9B,IAAMO,EAAUC,KAAKC,QAAQC,MACvBA,EAAQX,SAASY,eAAeJ,GAClCG,IACFA,EAAME,MAAMC,QAAU,Q,OAK5BV,EAAaE,SAAQ,SAAAS,GACnBA,EAAOd,iBAAiB,SAAS,WAC/B,IAAMU,EAAQF,KAAKO,QAAQ,UACvBL,IACFA,EAAME,MAAMC,QAAU,O,OAK5BT,EAAOC,SAAQ,SAAAK,GACbA,EAAMV,iBAAiB,SAAS,SAAUgB,GACpCA,EAAMC,SAAWP,IACnBA,EAAME,MAAMC,QAAU,O,UC3B9Bd,SAASC,iBAAiB,oBAAoB,WAC5C,IAAMkB,EAAcnB,SAASG,iBAAiB,mBACxCiB,EAAkBpB,SAASG,iBAC/B,4CAEiBgB,EAAYE,OAI/BF,EAAYb,SAAQ,SAACgB,EAAMC,GACX,IAAVA,IACFD,EAAKT,MAAMC,QAAU,O,IAKrBM,EAAgBC,OAAS,GAC3BD,EAAgB,GAAGI,cAAc,QAAQC,UAAUC,IAAI,UA2BzDN,EAAgBd,SAAQ,SAAAqB,GACtBA,EAAK1B,iBAAiB,SAAS,SAAUgB,GACvCA,EAAMW,iBACN,IA3BgBL,EA2BVM,EAAaC,SAASrB,KAAKC,QAAQqB,MA3BzBR,EA4BLM,EAAa,EA1B1BV,EAAYb,SAAQ,SAAAgB,GAClBA,EAAKT,MAAMC,QAAU,M,IAInBK,EAAYI,KACdJ,EAAYI,GAAOV,MAAMC,QAAU,QAIrCM,EAAgBd,SAAQ,SAAAqB,GACtBA,EAAKH,cAAc,QAAQC,UAAUO,OAAO,S,IAG1CZ,EAAgBG,IAClBH,EAAgBG,GAAOC,cAAc,QAAQC,UAAUC,IAAI,S,UCrCjE1B,SAASC,iBAAiB,oBAAoB,WAC5C,IAAMgC,EAAgBjC,SAASG,iBAAiB,gBAE5C+B,EAAe,EAEnB,SAASC,EAAUZ,GAEjBU,EAAc3B,SAAQ,SAAA8B,G,OAAOA,EAAIX,UAAUO,OAAO,S,IAGlDC,EAAcV,GAAOE,UAAUC,IAAI,UAEnCQ,EAAeX,C,CASjBY,EAAUD,GAGVG,aATA,WAEEF,GADmBD,EAAe,GAAKD,EAAcZ,O,GAdlC,I","sources":["src/js/modal.js","src/js/paginations.js","src/js/gallery-carousel.js"],"sourcesContent":["document.addEventListener('DOMContentLoaded', function () {\n  const actionArrows = document.querySelectorAll('.action-arrow');\n  const closeButtons = document.querySelectorAll('.modal .close-btn');\n  const modals = document.querySelectorAll('.modal');\n\n  actionArrows.forEach(arrow => {\n    arrow.addEventListener('click', function () {\n      const modalId = this.dataset.modal;\n      const modal = document.getElementById(modalId);\n      if (modal) {\n        modal.style.display = 'block';\n      }\n    });\n  });\n\n  closeButtons.forEach(button => {\n    button.addEventListener('click', function () {\n      const modal = this.closest('.modal');\n      if (modal) {\n        modal.style.display = 'none';\n      }\n    });\n  });\n\n  modals.forEach(modal => {\n    modal.addEventListener('click', function (event) {\n      if (event.target === modal) {\n        modal.style.display = 'none';\n      }\n    });\n  });\n});\n","document.addEventListener('DOMContentLoaded', function () {\n  const reviewCards = document.querySelectorAll('.customers-card');\n  const paginationLinks = document.querySelectorAll(\n    '.customer-carousel-pagination .page-link'\n  );\n  const numReviews = reviewCards.length;\n  let currentIndex = 0;\n\n  // Initially hide all reviews except the first one\n  reviewCards.forEach((card, index) => {\n    if (index !== 0) {\n      card.style.display = 'none';\n    }\n  });\n\n  // Initially set the first pagination dot as active\n  if (paginationLinks.length > 0) {\n    paginationLinks[0].querySelector('span').classList.add('active');\n  }\n\n  function showReview(index) {\n    // Hide all reviews\n    reviewCards.forEach(card => {\n      card.style.display = 'none';\n    });\n\n    // Show the review at the given index\n    if (reviewCards[index]) {\n      reviewCards[index].style.display = 'flex';\n    }\n\n    // Update pagination dots\n    paginationLinks.forEach(link => {\n      link.querySelector('span').classList.remove('active');\n    });\n\n    if (paginationLinks[index]) {\n      paginationLinks[index].querySelector('span').classList.add('active');\n    }\n\n    currentIndex = index;\n  }\n\n  // Add event listeners to pagination links\n  paginationLinks.forEach(link => {\n    link.addEventListener('click', function (event) {\n      event.preventDefault();\n      const pageNumber = parseInt(this.dataset.page);\n      showReview(pageNumber - 1); // Adjust for 0-based index\n    });\n  });\n});\n","document.addEventListener('DOMContentLoaded', function () {\n  const galleryImages = document.querySelectorAll('.gallery-img');\n  const intervalTime = 3000; // Change image every 3 seconds (adjust as needed)\n  let currentIndex = 0;\n\n  function showImage(index) {\n    // Remove active class from the current image\n    galleryImages.forEach(img => img.classList.remove('active'));\n\n    // Add active class to the image at the given index\n    galleryImages[index].classList.add('active');\n\n    currentIndex = index;\n  }\n\n  function nextImage() {\n    const nextIndex = (currentIndex + 1) % galleryImages.length;\n    showImage(nextIndex);\n  }\n\n  // Show the first image initially\n  showImage(currentIndex);\n\n  // Set up the automatic image change interval\n  setInterval(nextImage, intervalTime);\n});\n"],"names":["document","addEventListener","actionArrows","querySelectorAll","closeButtons","modals","forEach","arrow","modalId","this","dataset","modal","getElementById","style","display","button","closest","event","target","reviewCards","paginationLinks","length","card","index","querySelector","classList","add","link","preventDefault","pageNumber","parseInt","page","remove","galleryImages","currentIndex","showImage","img","setInterval"],"version":3,"file":"index.77abe18f.js.map"}